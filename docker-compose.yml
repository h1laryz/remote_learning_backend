services:
    swagger-ui:
        image: swaggerapi/swagger-ui
        container_name: "swagger-ui"
        ports:
          - "8082:8080"
        volumes:
          - ./docs/swagger.json:/swagger.json
        environment:
          SWAGGER_JSON: /swagger.json

    postgres:
        container_name: remote-learning-postgres
        image: postgres:12
        environment:
          - POSTGRES_DB=postgres
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
        ports:
          - 5432
        volumes:
          - ./.pgdata:/var/lib/postgresql/data
        networks:
          - postgres

    pgadmin:
        container_name: remote-learning-pgadmin
        image: dpage/pgadmin4
        environment:
          - PGADMIN_DEFAULT_EMAIL=mail@domain.com
          - PGADMIN_DEFAULT_PASSWORD=password
        ports:
          - 27016:80
        depends_on:
          - postgres
        networks:
          - postgres

    flyway:
        container_name: remote-learning-flyway
        image: flyway/flyway
        command: -url=jdbc:postgresql://remote-learning-postgres/postgres -user=postgres -password=postgres -schemas=flyway -connectRetries=60 -validateMigrationNaming=true migrate
        volumes:
          - ./postgresql/migrations/:/flyway/sql
        depends_on:
          - postgres
        networks:
          - postgres

    api:
        container_name: remote-learning-chat
        image: ghcr.io/userver-framework/ubuntu-22.04-userver-pg:latest
        privileged: true
        environment:
          - POSTGRES_DB=postgres
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - PREFIX=${PREFIX:-~/.local}
          - CCACHE_DIR=/remote_learning_backend/.ccache
          - CORES_DIR=/cores
          - BUILD_CONFIGURATION=$REMOTE_LEARNING_DOCKER_BUILD_CONFIGURATION
        volumes:
          - .:/remote_learning_backend:rw
          - ${TC_CORES_DIR:-./.cores}:/cores:rw
        ports:
          - "8080:8080"
        working_dir: /remote_learning_backend
        entrypoint:
          - ./scripts/run_as_user.sh
          - ./scripts/run_api_docker.sh
        depends_on:
          - flyway
          - postgres
          - localstack
        networks:
          - postgres

    localstack:
      container_name: "remote-learning-s3"
      image: localstack/localstack:s3-latest
      ports:
        - "4566:4566"
      environment:
        - DEBUG=${REMOTE_LEARNING_DOCKER_BUILD_CONFIGURATION:-0}
        - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN}
      volumes:
        - ".s3/:/var/lib/localstack"
        - "/var/run/docker.sock:/var/run/docker.sock"

networks:
    postgres:
        driver: bridge
